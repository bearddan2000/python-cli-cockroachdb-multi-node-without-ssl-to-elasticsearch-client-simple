version: "3.4"

services:

  py-srv:
    build: py-srv
    healthcheck:
      test: "exit 0"
    command: sh -c "/wait && python app.py"
    environment:
      - WAIT_HOSTS=db:26257,elasticsearch:9200
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    depends_on:
      - db
      - elasticsearch
    links:
      - "db:db"
      - "elasticsearch:elasticsearch"


  db:
    image: cockroachdb/cockroach:${COCKROACH_VERSION}
    container_name: db
    ports:
     - "20000:26257"
     - "8000:8080"
    command: start --insecure

  db_1:
    image: cockroachdb/cockroach:${COCKROACH_VERSION}
    container_name: db_1
    ports:
     - "20001:26257"
     - "8001:8080"
    command: start --insecure --join=db

  db_2:
    image: cockroachdb/cockroach:${COCKROACH_VERSION}
    container_name: db_2
    ports:
     - "20002:26257"
     - "8002:8080"
    command: start --insecure --join=db

  db-runner:
    image: cockroachdb/cockroach:${COCKROACH_VERSION}
    command:
      - shell
      - /usr/local/bin/init-data.sh
      - db:26257
    volumes:
     - ./db/init-data.sh:/usr/local/bin/init-data.sh:ro
     - ./db/sql:/docker-entrypoint-initdb.d
    depends_on:
     - db
     - db_1
     - db_2
    links:
     - "db:db"

  elasticsearch:
    image: elasticsearch:${STACK_VERSION}
    healthcheck:
      test: "exit 0"
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200

  kibana:
    image: kibana:${STACK_VERSION}
    healthcheck:
      test: "exit 0"
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
      - "SERVER_NAME=127.0.0.1"
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  esdata:
    driver: local

